version: '3'

services:
  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./mongo_data/:/data/db
    container_name: my-mongodb
    networks:
      - my-network

  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    depends_on:
      - mongo
    environment:
      - MONGO_HOST=my-mongodb
      - MONGO_PORT=27017
      - PYTHONPATH=/app:/dashboard
    volumes:
      - ./app:/app
      - ./dashboard:/dashboard
      - ./data:/data
    networks:
      - my-network

  dashboard:
    build:
      context: .
      dockerfile: dashboard/Dockerfile
    ports:
      - 8501:8501
    depends_on:
      - app
    environment:
      - MONGO_HOST=my-mongodb
      - MONGO_PORT=27017
      - PYTHONPATH=/app:/dashboard
    volumes:
      - ./app:/app
      - ./dashboard:/dashboard
      - ./data:/data
    networks:
      - my-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

  airflow-scheduler:
    image: apache/airflow:2.9.3
    container_name: airflow_scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - my-network
    depends_on:
      - postgres
    command: >
      bash -c "
      airflow db init &&
      airflow scheduler"
      
  airflow-webserver:
    image: apache/airflow:2.9.3
    container_name: airflow_webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    ports:
      - 8080:8080
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - my-network
    depends_on:
      - postgres
    command: >
      bash -c "
      sleep 10 &&
      airflow webserver"

networks:
  my-network:
    driver: bridge
